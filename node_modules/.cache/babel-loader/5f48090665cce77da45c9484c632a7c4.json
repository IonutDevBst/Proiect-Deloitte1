{"ast":null,"code":"var _jsxFileName = \"/Users/iariton/Documents/React all project/reactapp/src/components/menu.js\";\nconst {\n  useRef,\n  useState,\n  useEffect,\n  createRef\n} = React;\n/*--------------------\nItems\n--------------------*/\n\nconst items = [{\n  name: \"Freelance\",\n  color: \"#f44336\",\n  href: \"#\"\n}, {\n  name: \"Design\",\n  color: \"#e91e63\",\n  href: \"#\"\n}, {\n  name: \"Director\",\n  color: \"#9c27b0\",\n  href: \"#\"\n}, {\n  name: \"Experience\",\n  color: \"#673ab7\",\n  href: \"#\"\n}, {\n  name: \"Interface\",\n  color: \"#3f51b5\",\n  href: \"#\"\n}];\n/*--------------------\nMenu\n--------------------*/\n\nconst Menu = _ref => {\n  let {\n    items\n  } = _ref;\n  const $root = useRef();\n  const $indicator1 = useRef();\n  const $indicator2 = useRef();\n  const $items = useRef(items.map(createRef));\n  const [active, setActive] = useState(0);\n\n  const animate = () => {\n    const menuOffset = $root.current.getBoundingClientRect();\n    const activeItem = $items.current[active].current;\n    const {\n      width,\n      height,\n      top,\n      left\n    } = activeItem.getBoundingClientRect();\n    const settings = {\n      x: left - menuOffset.x,\n      y: top - menuOffset.y,\n      width: width,\n      height: height,\n      backgroundColor: items[active].color,\n      ease: 'elastic.out(.7, .7)',\n      duration: .8\n    };\n    gsap.to($indicator1.current, { ...settings\n    });\n    gsap.to($indicator2.current, { ...settings,\n      duration: 1\n    });\n  };\n\n  useEffect(() => {\n    animate();\n    window.addEventListener('resize', animate);\n    return () => {\n      window.removeEventListener('resize', animate);\n    };\n  }, [active]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: $root,\n    className: \"menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, items.map((item, index) => /*#__PURE__*/React.createElement(\"a\", {\n    key: item.name,\n    ref: $items.current[index],\n    className: `item ${active === index ? 'active' : ''}`,\n    onMouseEnter: () => {\n      setActive(index);\n    },\n    href: item.href,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, item.name)), /*#__PURE__*/React.createElement(\"div\", {\n    ref: $indicator1,\n    className: \"indicator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    ref: $indicator2,\n    className: \"indicator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }));\n};\n/*--------------------\nApp\n--------------------*/\n\n\nconst App = () => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Menu, {\n    items: items,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }));\n};\n/*--------------------\nRender\n--------------------*/\n\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 17\n  }\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/iariton/Documents/React all project/reactapp/src/components/menu.js"],"names":["useRef","useState","useEffect","createRef","React","items","name","color","href","Menu","$root","$indicator1","$indicator2","$items","map","active","setActive","animate","menuOffset","current","getBoundingClientRect","activeItem","width","height","top","left","settings","x","y","backgroundColor","ease","duration","gsap","to","window","addEventListener","removeEventListener","item","index","App","ReactDOM","render","document","getElementById"],"mappings":"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","sourcesContent":["const { useRef, useState, useEffect, createRef } = React\n\n\n/*--------------------\nItems\n--------------------*/\nconst items = [\n  {\n    name: \"Freelance\",\n    color: \"#f44336\",\n    href: \"#\"\n  },\n  {\n    name: \"Design\",\n    color: \"#e91e63\",\n    href: \"#\"\n  },\n  {\n    name: \"Director\",\n    color: \"#9c27b0\",\n    href: \"#\"\n  },\n  {\n    name: \"Experience\",\n    color: \"#673ab7\",\n    href: \"#\"\n  },\n  {\n    name: \"Interface\",\n    color: \"#3f51b5\",\n    href: \"#\"\n  }\n];\n\n\n/*--------------------\nMenu\n--------------------*/\nconst Menu = ({items}) => {\n  const $root = useRef()\n  const $indicator1 = useRef()\n  const $indicator2 = useRef()\n  const $items = useRef(items.map(createRef))\n  const [ active, setActive ] = useState(0)\n  \n  const animate = () => {\n    const menuOffset = $root.current.getBoundingClientRect()\n    const activeItem = $items.current[active].current\n    const { width, height, top, left } = activeItem.getBoundingClientRect()\n    \n    const settings = {\n      x: left - menuOffset.x,\n      y: top - menuOffset.y,\n      width: width,\n      height: height,\n      backgroundColor: items[active].color,\n      ease: 'elastic.out(.7, .7)',\n      duration: .8\n    }\n    \n    gsap.to($indicator1.current, {\n      ...settings,\n    })\n    \n    gsap.to($indicator2.current, {\n      ...settings,\n      duration: 1\n    })\n  }\n  \n  useEffect(() => {\n    animate()\n    window.addEventListener('resize', animate)\n    \n    return (() => {\n      window.removeEventListener('resize', animate)\n    })    \n  }, [active])\n  \n  return (\n    <div\n      ref={$root}\n      className=\"menu\"\n    >\n      {items.map((item, index) => (\n        <a\n          key={item.name}\n          ref={$items.current[index]}\n          className={`item ${active === index ? 'active' : ''}`}\n          onMouseEnter={() => {\n            setActive(index)\n          }}\n          href={item.href}\n         >\n          {item.name}\n        </a>\n      ))}\n      <div\n        ref={$indicator1}\n        className=\"indicator\"\n       />\n      <div\n        ref={$indicator2}\n        className=\"indicator\"\n       />\n    </div>\n  )\n}\n\n\n/*--------------------\nApp\n--------------------*/\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Menu items={items} />\n    </div>\n  )\n}\n\n\n/*--------------------\nRender\n--------------------*/\nReactDOM.render(<App />,\ndocument.getElementById(\"root\"))"]},"metadata":{},"sourceType":"module"}